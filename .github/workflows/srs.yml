name: Generate rule-set .srs fron .json

on:
  schedule:
    - cron: '0 */72 * * *'  # Every three days
  workflow_dispatch:
  
permissions:
  contents: write

jobs:
  generate_lists:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Pull Changes
        run: git pull

      - name: Set up Node.js (if required)
        uses: actions/setup-node@v4
        with:
          node-version: '20'  # Adjust if needed

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y curl wget git jq
          bash <(curl -fsSL https://sing-box.app/deb-install.sh)

      - name: Generate srs
        env:
          NO_SKIP: true
        run: |
         sing-box rule-set compile --output /home/runner/work/sb-rule-sets/sb-rule-sets/torrent-clients.srs /home/runner/work/sb-rule-sets/sb-rule-sets/torrent-clients.json
         sing-box rule-set compile --output /home/runner/work/sb-rule-sets/sb-rule-sets/ru-app-list.srs /home/runner/work/sb-rule-sets/sb-rule-sets/ru-app-list.json
         sing-box rule-set compile --output /home/runner/work/sb-rule-sets/sb-rule-sets/unbanru-app-list.srs /home/runner/work/sb-rule-sets/sb-rule-sets/unbanru-app-list.json
         
      - name: Generate srs no-russia-hosts
        env:
          NO_SKIP: true
        run: |
         wget -O no-russia-hosts.txt https://github.com/dartraiden/no-russia-hosts/raw/master/hosts.txt
         sing-box rule-set convert --type adguard --output /home/runner/work/sb-rule-sets/sb-rule-sets/no-russia-hosts.srs no-russia-hosts.txt
         sing-box rule-set decompile /home/runner/work/sb-rule-sets/sb-rule-sets/no-russia-hosts.srs --output /home/runner/work/sb-rule-sets/sb-rule-sets/no-russia-hosts.json
         rm no-russia-hosts.txt
         sing-box rule-set compile --output /home/runner/work/sb-rule-sets/sb-rule-sets/no-russia-hosts.srs /home/runner/work/sb-rule-sets/sb-rule-sets/no-russia-hosts.json

      - name: Download and Extract generate-geoip-geosite
        run: |
          DOWNLOAD_URL=$(curl -s https://api.github.com/repos/Dunamis4tw/generate-geoip-geosite/releases/latest | grep "generate-geoip-geosite.*linux-amd64.tar.gz" | grep "browser_download_url" | cut -d '"' -f 4)
          ARCHIVE_NAME=${DOWNLOAD_URL##*/}
          wget "$DOWNLOAD_URL"
          tar -xf "$ARCHIVE_NAME"
          rm "$ARCHIVE_NAME"
          chmod +x generate-geoip-geosite
          
      - name: Generate srs itdoginfo-allow-domains-inside-russia without .ua domain_suffix
        env:
          NO_SKIP: true
        run: |
         wget -O Russia-domains-inside.lst https://github.com/itdoginfo/allow-domains/raw/main/src/Russia-domains-inside.lst
         sing-box rule-set convert --type adguard --output /home/runner/work/sb-rule-sets/sb-rule-sets/itdoginfo-allow-domains-inside-russia.srs Russia-domains-inside.lst
         sing-box rule-set decompile /home/runner/work/sb-rule-sets/sb-rule-sets/itdoginfo-allow-domains-inside-russia.srs --output /home/runner/work/sb-rule-sets/sb-rule-sets/itdoginfo-allow-domains-inside-russia.json
         rm inside-raw.lst
         jq '.rules[0].domain |= map(select(. != ".ua")) | .rules[0] |= with_entries(if .key == "domain" then .key = "domain_suffix" else . end)' itdoginfo-allow-domains-inside-russia.json > temp.json && mv temp.json itdoginfo-allow-domains-inside-russia.json
         sing-box rule-set compile --output /home/runner/work/sb-rule-sets/sb-rule-sets/itdoginfo-allow-domains-inside-russia.srs /home/runner/work/sb-rule-sets/sb-rule-sets/itdoginfo-allow-domains-inside-russia.json 
         
      - name: Delete generate-geoip-geosite tool
        run: |
          rm -f /home/runner/work/RuRulesets/RuRulesets/generate-geoip-geosite 
          
      - name: Get current date
        id: date
        run: |
          echo "DATE=$(TZ=Europe/Moscow date +'%Y-%m-%dT%H:%M:%S')" >> $GITHUB_ENV
      
      - name: Commit and Push Changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: GitHub Action
          author_email: githubaction@githubaction.com
          message: 'Generating .srs rule-sets ${{ env.DATE }}'
          push: true
          cwd: .
          default_author: github_actor
          fetch: --tags --force
          pathspec_error_handling: ignore
          github_token: ${{ secrets.RULESET_TOKEN }}
